# Create
sql_create = "CREATE TABLE refs_legacy.measurement_types(
code VARCHAR(10) PRIMARY KEY NOT NULL,
name_en VARCHAR(100),
name_fr VARCHAR(100),
measure_unit VARCHAR(10)
)"
# Run the query
dbExecute(C_REFERENCE_DATA, sql_create)
LEGACY_MEASUREMENT_TYPES_IOTDB
LEGACY_MEASUREMENT_TYPES_IOTDB = query(DB_IOTDB(), "SELECT CODE, NAME_EN, '' AS NAME_FR, MEASURE_UNIT FROM meta.MEASURE_TYPES")
LEGACY_MEASUREMENT_TYPES_IOTDB
sql_insert = make_sql_inserts(LEGACY_MEASUREMENT_TYPES_IOTDB,
schema = "refs_legacy",
table = "measurement_types",
file  = "./insert_legacy_measurement_types.sql",
header = "-- Insertion of Legacy Measurement Types into IOTC_ReferenceData",
footer = ";",
truncate = FALSE
)
cat(sql_insert, sep = "\n")
# Run the query
dbExecute(C_REFERENCE_DATA, prep_sql_lines("insert_legacy_measurement_types.sql"))
render("./rmd/SF_DESCRIPTION.Rmd", output_file = paste0("DESCRIPTION_", TITLE, ".docx"),
output_dir = "./outputs/docx/",
params = list(dynamictitle = paste0("Standardisation of the size-frequency data for ", SPECIES_SELECTED, " ", START_YEAR, "--", END_YEAR))
)
getwd()
setwd("C:/Users/echassot/Desktop/repositories/data-processing/iotc-sf-data-processing")
render("./rmd/SF_DESCRIPTION.Rmd", output_file = paste0("DESCRIPTION_", TITLE, ".docx"),
output_dir = "./outputs/docx/",
params = list(dynamictitle = paste0("Standardisation of the size-frequency data for ", SPECIES_SELECTED, " ", START_YEAR, "--", END_YEAR))
)
1520/2
ls()
# Libraries
library(this.path)
# Set the Working Directory
setwd(here())
# Select the species
CODE_SPECIES_SELECTED = "BET"
START_YEAR            = 1950
END_YEAR              = 2024
# Select the view in IOTDB
#VIEW = ifelse(CODE_SPECIES_SELECTED %in% c("BLT", "FRI", "KAW", "LOT", "COM", "GUT"), "vwSFNER", paste0("dbo.vwSF", CODE_SPECIES_SELECTED))
# Select the URL for the document on conversion factors and morphometric relationships
if(CODE_SPECIES_SELECTED %in% c("BET", "SKJ", "YFT")){
TITLE_CONVERSION_DOCUMENT = "IOTC-2023-WPTT25(AS)-DATA13"
URL_CONVERSION_DOCUMENT = "https://www.iotc.org/WPTT/25/Data/13-Equations"}
if(CODE_SPECIES_SELECTED %in% c("BLT", "FRI", "KAW", "LOT", "COM", "GUT"))
{
TITLE_CONVERSION_DOCUMENT = "IOTC-2022-WPNT12-DATA11"
URL_CONVERSION_DOCUMENT = "https://www.iotc.org/WPNT/12/Data/11-Equations"
}
if(CODE_SPECIES_SELECTED %in% c("BLM", "BUM", "MLS", "SFA", "SWO"))
{
TITLE_CONVERSION_DOCUMENT = "IOTC-2022-WPB20-DATA11"
URL_CONVERSION_DOCUMENT = "https://www.iotc.org/WPB/20/Data/11-Equations"
}
if(CODE_SPECIES_SELECTED %in% c("ALB"))
{
TITLE_CONVERSION_DOCUMENT = "IOTC-2025-WPTmT09(DP)-DATA11"
URL_CONVERSION_DOCUMENT = "https://www.iotc.org/WPTmT/09DP/Data/11-Equations"
}
# Source the R codes
setwd("initialisation")
source("00_CORE.R")
setwd("..")
library(iotc.data.reference.codelists)
iotc.data.reference.codelists::FLEETS[1]
iotc.data.reference.codelists::FLEETS_FLAGS[1]
iotc.data.reference.codelists::ENTITIES
unique(iotc.data.reference.codelists::FLEETS_FLAGS[!REPORTING_ENTITY_CODE %in% c("IOTC", "NEI") & FLAG_CODE != "NEI"])
sort(unique(iotc.data.reference.codelists::FLEETS_FLAGS$FLAG_CODE))
fleets_for = function(reporting_entity_code, flag_country_code, valid_fleets = unique(iotc.data.reference.codelists::FLEETS_FLAGS[!REPORTING_ENTITY_CODE %in% c("IOTC", "NEI") & FLAG_CODE != "NEI"])) {
valid_fleets = unique(valid_fleets[, .(FLAG_CODE, REPORTING_ENTITY_CODE, FLEET_CODE, NAME_EN, NAME_FR)])
reporting_entity_code = trim(reporting_entity_code)
flag_country_code     = trim(flag_country_code)
fleets = valid_fleets[REPORTING_ENTITY_CODE == reporting_entity_code &
FLAG_CODE             == flag_country_code]
return(fleets)
}
fleets_for("EUR", "FRA")
iotc.data.reference.codelists::FLEETS_FLAGS[1]
names(iotc.data.reference.datasets.SF.std::STD.BILL)
names(iotc.data.reference.datasets.SF.std::STD.BILL[, .(YEAR, MONTH_START, MONTH_END, FISHING_GROUND_CODE, FLEET_CODE, FISHERY_TYPE_CODE, FISHERY_GROUP_CODE, FISHERY_CODE, GEAR_CODE, SCHOOL_TYPE_CODE, SPECIES_CODE])
names(iotc.data.reference.datasets.SF.std::STD.BILL[, .(YEAR, MONTH_START, MONTH_END, FISHING_GROUND_CODE, FLEET_CODE, FISHERY_TYPE_CODE, FISHERY_GROUP_CODE, FISHERY_CODE, GEAR_CODE, SCHOOL_TYPE_CODE, SPECIES_CODE)])
ls()
# Libraries
library(this.path)
# Set the Working Directory
setwd(here())
# Select the species
CODE_SPECIES_SELECTED = "BET"
START_YEAR            = 1950
END_YEAR              = 2024
# Select the view in IOTDB
#VIEW = ifelse(CODE_SPECIES_SELECTED %in% c("BLT", "FRI", "KAW", "LOT", "COM", "GUT"), "vwSFNER", paste0("dbo.vwSF", CODE_SPECIES_SELECTED))
# Select the URL for the document on conversion factors and morphometric relationships
if(CODE_SPECIES_SELECTED %in% c("BET", "SKJ", "YFT")){
TITLE_CONVERSION_DOCUMENT = "IOTC-2023-WPTT25(AS)-DATA13"
URL_CONVERSION_DOCUMENT = "https://www.iotc.org/WPTT/25/Data/13-Equations"}
if(CODE_SPECIES_SELECTED %in% c("BLT", "FRI", "KAW", "LOT", "COM", "GUT"))
{
TITLE_CONVERSION_DOCUMENT = "IOTC-2022-WPNT12-DATA11"
URL_CONVERSION_DOCUMENT = "https://www.iotc.org/WPNT/12/Data/11-Equations"
}
if(CODE_SPECIES_SELECTED %in% c("BLM", "BUM", "MLS", "SFA", "SWO"))
{
TITLE_CONVERSION_DOCUMENT = "IOTC-2022-WPB20-DATA11"
URL_CONVERSION_DOCUMENT = "https://www.iotc.org/WPB/20/Data/11-Equations"
}
if(CODE_SPECIES_SELECTED %in% c("ALB"))
{
TITLE_CONVERSION_DOCUMENT = "IOTC-2025-WPTmT09(DP)-DATA11"
URL_CONVERSION_DOCUMENT = "https://www.iotc.org/WPTmT/09DP/Data/11-Equations"
}
# Select the URL for the document on conversion factors and morphometric relationships
if(CODE_SPECIES_SELECTED %in% c("BET", "SKJ", "YFT")){
TITLE_CONVERSION_DOCUMENT = "IOTC-2025-WPTT27-DATA08"
URL_CONVERSION_DOCUMENT = "https://iotc.org/WPTT/27/Data/08-EQ"}
TITLE_CONVERSION_DOCUMENT
URL_CONVERSION_DOCUMENT
setwd("initialisation/")
source("90_LIBS.R")
source("91_LIBS_EXTERNAL.R")
# Species of interest
SPECIES_SELECTED = CL_SPECIES[SPECIES_CODE == CODE_SPECIES_SELECTED, SPECIES]
TITLE = paste("IOTC-DATASETS-RC", CODE_SPECIES_SELECTED, START_YEAR, END_YEAR, sep = "-")
TITLE
# Create empty workbook
SCI_RC_DATA = createWorkbook("SCI_RC_DATA")
## Wide table format
FIELDS_SCI_RC_DATA_TABLE = data.table(read.xlsx("../inputs/FIELDS_STANDARDIZED_RC_DATA.xlsx", sheet = "RC FORMAT FIELDS", sep.names = " "))[, .(FIELD, DEFINITION, `CODE LIST NAME`, `CODE LIST URL`)]
# Create empty workbook
BSE_RC_DATA = createWorkbook("BSE_RC_DATA")
## Wide table format
FIELDS_BSE_RC_DATA_TABLE = data.table(read.xlsx("../inputs/FIELDS_STANDARDIZED_RC_DATA.xlsx", sheet = "RC FORMAT FIELDS", sep.names = " "))[, .(FIELD, DEFINITION, `CODE LIST NAME`, `CODE LIST URL`)]
## Wide table format
FIELDS_BSE_RC_DATA_TABLE = data.table(read.xlsx("../inputs/FIELDS_BSE_RC_DATA.xlsx", sheet = "RC FORMAT FIELDS", sep.names = " "))[, .(FIELD, DEFINITION, `CODE LIST NAME`, `CODE LIST URL`)]
FIELDS_BSE_RC_DATA_TABLE[1:2]
## Wide table format
FIELDS_BSE_RC_DATA_TABLE = data.table(read.xlsx("../inputs/FIELDS_BSE_RC_DATA.xlsx", sheet = "RC FORMAT FIELDS", sep.names = " "))[, .(FIELD, DEFINITION, `CODE LIST NAME`, `CODE LIST URL`)]
FIELDS_BSE_RC_DATA_TABLE
FIELDS_BSE_RC_DATA_TABLE[!is.na(`CODE LIST NAME`), `CODE LIST` := paste0("<a href=\"", `CODE LIST URL`, "\">", `CODE LIST NAME`, "</a>")]
FIELDS_BSE_RC_DATA_TABLE = FIELDS_BSE_RC_DATA_TABLE[, -c("CODE LIST NAME", "CODE LIST URL")]
FIELDS_BSE_RC_DATA_TABLE
FIELDS_BSE_RC_DATA_TABLE
# Save the workbook
saveWorkbook(STD_SF_DATA, paste0("../outputs/data/", TITLE, "-DDD.xlsx"), overwrite = TRUE)
getwd()
rm(BSE_RC_DATA)
BSE_RC_DATA = createWorkbook("BSE_RC_DATA")
# DATA FIELDS ####
# Read description of data fields
## Wide table format
FIELDS_BSE_RC_DATA_TABLE = data.table(read.xlsx("../inputs/FIELDS_BSE_RC_DATA.xlsx", sheet = "RC FORMAT FIELDS", sep.names = " "))[, .(FIELD, DEFINITION, `CODE LIST NAME`, `CODE LIST URL`)]
FIELDS_BSE_RC_DATA_TABLE[!is.na(`CODE LIST NAME`), `CODE LIST` := paste0("<a href=\"", `CODE LIST URL`, "\">", `CODE LIST NAME`, "</a>")]
FIELDS_BSE_RC_DATA_TABLE = FIELDS_BSE_RC_DATA_TABLE[, -c("CODE LIST NAME", "CODE LIST URL")]
# Add to workbook
addWorksheet(BSE_RC_DATA, "field_description")
writeDataTable(BSE_RC_DATA, sheet = "field_description", x = FIELDS_BSE_RC_DATA_TABLE, rowNames = FALSE, tableStyle = "TableStyleLight11")
setColWidths(BSE_RC_DATA, sheet = "field_description", cols = 1:ncol(FIELDS_BSE_RC_DATA_TABLE), widths = "auto")
# # CODE LISTS ####
#
# ## FLEETS ####
# addWorksheet(BSE_RC_DATA, "FLEETS")
# writeDataTable(BSE_RC_DATA, sheet = "FLEETS", x = CL_FLEETS, tableStyle = "TableStyleLight11")
# setColWidths(BSE_RC_DATA, sheet = "FLEETS", cols = 1:nrow(CL_FLEETS), widths = "auto")
#
# ## IRREGULAR GRID ####
# addWorksheet(BSE_RC_DATA, "FISHING GROUNDS")
# writeDataTable(BSE_RC_DATA, sheet = "FISHING GROUNDS", x = CL_FISHING_GROUNDS,  tableStyle = "TableStyleLight11")
# setColWidths(BSE_RC_DATA, sheet = "FISHING GROUNDS", cols = 1:nrow(CL_FISHING_GROUNDS), widths = "auto")
#
# ## GEARS ####
# addWorksheet(BSE_RC_DATA, "GEARS")
# writeDataTable(BSE_RC_DATA, sheet = "GEARS", x = CL_GEARS,  tableStyle = "TableStyleLight11")
# setColWidths(BSE_RC_DATA, sheet = "GEARS", cols = 1:nrow(CL_GEARS), widths = "auto")
#
# ## SCHOOL TYPES ####
# addWorksheet(BSE_RC_DATA, "SCHOOL TYPES")
# writeDataTable(BSE_RC_DATA, "SCHOOL TYPES", CL_SCHOOL_TYPES, tableStyle = "TableStyleLight11")
# setColWidths(BSE_RC_DATA, sheet = "SCHOOL TYPES", cols = 1:nrow(CL_SCHOOL_TYPES), widths = "auto")
#
# Save the workbook
getwd()
TITLE
# addWorksheet(BSE_RC_DATA, "GEARS")
# writeDataTable(BSE_RC_DATA, sheet = "GEARS", x = CL_GEARS,  tableStyle = "TableStyleLight11")
# setColWidths(BSE_RC_DATA, sheet = "GEARS", cols = 1:nrow(CL_GEARS), widths = "auto")
#
# ## SCHOOL TYPES ####
# addWorksheet(BSE_RC_DATA, "SCHOOL TYPES")
# writeDataTable(BSE_RC_DATA, "SCHOOL TYPES", CL_SCHOOL_TYPES, tableStyle = "TableStyleLight11")
# setColWidths(BSE_RC_DATA, sheet = "SCHOOL TYPES", cols = 1:nrow(CL_SCHOOL_TYPES), widths = "auto")
#
# Save the workbook
saveWorkbook(BSE_RC_DATA, paste0("../outputs/", TITLE, "-DDD.xlsx"), overwrite = TRUE)
# Species of interest
#SPECIES_SELECTED = CL_SPECIES[SPECIES_CODE == CODE_SPECIES_SELECTED, SPECIES]
SPECIES_SELECTED = "Bigeye tuna"
TITLE = paste("IOTC-DATASETS-RC", CODE_SPECIES_SELECTED, START_YEAR, END_YEAR, sep = "-")
# Create empty workbook
BSE_RC_DATA = createWorkbook("BSE_RC_DATA")
## Wide table format
FIELDS_BSE_RC_DATA_TABLE = data.table(read.xlsx("../inputs/FIELDS_BSE_RC_DATA.xlsx", sheet = "RC FORMAT FIELDS", sep.names = " "))[, .(FIELD, DEFINITION, `CODE LIST NAME`, `CODE LIST URL`)]
FIELDS_BSE_RC_DATA_TABLE[!is.na(`CODE LIST NAME`), `CODE LIST` := paste0("<a href=\"", `CODE LIST URL`, "\">", `CODE LIST NAME`, "</a>")]
FIELDS_BSE_RC_DATA_TABLE
SPECIES_SELECTED = "Bigeye tuna"
#TITLE = paste("IOTC-DATASETS-RC", CODE_SPECIES_SELECTED, min(FL_STD_DATA_SPECIES$YEAR), max(FL_STD_DATA_SPECIES$YEAR), sep = "-")
TITLE = paste("IOTC-DATASETS-RC", CODE_SPECIES_SELECTED, START_YEAR, END_YEAR, sep = "-")
# EXPORT FIELD AND CODELISTS ####
# Create empty workbook
BSE_RC_DATA = createWorkbook("BSE_RC_DATA")
# DATA FIELDS ####
# Read description of data fields
## Wide table format
FIELDS_BSE_RC_DATA_TABLE = data.table(read.xlsx("../inputs/FIELDS_BSE_RC_DATA.xlsx", sheet = "RC FORMAT FIELDS", sep.names = " "))[, .(FIELD, DEFINITION, `CODE LIST NAME`, `CODE LIST URL`)]
FIELDS_BSE_RC_DATA_TABLE[!is.na(`CODE LIST NAME`), `CODE LIST` := paste0("<a href=\"", `CODE LIST URL`, "\">", `CODE LIST NAME`, "</a>")]
FIELDS_BSE_RC_DATA_TABLE = FIELDS_BSE_RC_DATA_TABLE[, -c("CODE LIST NAME", "CODE LIST URL")]
# Add to workbook
addWorksheet(BSE_RC_DATA, "field_description")
writeDataTable(BSE_RC_DATA, sheet = "field_description", x = FIELDS_BSE_RC_DATA_TABLE, rowNames = FALSE, tableStyle = "TableStyleLight11")
setColWidths(BSE_RC_DATA, sheet = "field_description", cols = 1:ncol(FIELDS_BSE_RC_DATA_TABLE), widths = "auto")
# # CODE LISTS ####
#
# ## FLEETS ####
# addWorksheet(BSE_RC_DATA, "FLEETS")
# writeDataTable(BSE_RC_DATA, sheet = "FLEETS", x = CL_FLEETS, tableStyle = "TableStyleLight11")
# setColWidths(BSE_RC_DATA, sheet = "FLEETS", cols = 1:nrow(CL_FLEETS), widths = "auto")
#
# ## IRREGULAR GRID ####
# addWorksheet(BSE_RC_DATA, "FISHING GROUNDS")
# writeDataTable(BSE_RC_DATA, sheet = "FISHING GROUNDS", x = CL_FISHING_GROUNDS,  tableStyle = "TableStyleLight11")
# setColWidths(BSE_RC_DATA, sheet = "FISHING GROUNDS", cols = 1:nrow(CL_FISHING_GROUNDS), widths = "auto")
#
# ## GEARS ####
# addWorksheet(BSE_RC_DATA, "GEARS")
# writeDataTable(BSE_RC_DATA, sheet = "GEARS", x = CL_GEARS,  tableStyle = "TableStyleLight11")
# setColWidths(BSE_RC_DATA, sheet = "GEARS", cols = 1:nrow(CL_GEARS), widths = "auto")
#
# ## SCHOOL TYPES ####
# addWorksheet(BSE_RC_DATA, "SCHOOL TYPES")
# writeDataTable(BSE_RC_DATA, "SCHOOL TYPES", CL_SCHOOL_TYPES, tableStyle = "TableStyleLight11")
# setColWidths(BSE_RC_DATA, sheet = "SCHOOL TYPES", cols = 1:nrow(CL_SCHOOL_TYPES), widths = "auto")
#
# Save the workbook
saveWorkbook(BSE_RC_DATA, paste0("../outputs/", TITLE, "-DDD.xlsx"), overwrite = TRUE)
# Libraries
library(this.path)
# Set the Working Directory
setwd(here())
# Select the species
CODE_SPECIES_SELECTED = "BET"
START_YEAR            = 1950
END_YEAR              = 2024
# Select the URL for the document on conversion factors and morphometric relationships
if(CODE_SPECIES_SELECTED %in% c("BET", "SKJ", "YFT")){
TITLE_CONVERSION_DOCUMENT = "IOTC-2025-WPTT27-DATA08"
URL_CONVERSION_DOCUMENT = "https://iotc.org/WPTT/27/Data/08-EQ"}
format(Sys.time(), '%d %B %Y')
FIELDS_STD_RC_DATA_TABLE
FIELDS_BSE_RC_DATA_TABLE
# Extract the data
RC_BSE = NC_est(years = START_YEAR:END_YEAR, factorize_results = TRUE)
names(RC_BSE)
paste(names(RC_BSE), collapse = ",")
c(names(RC_BSE))
paste0(names(RC_BSE), collapse = ",")
writeLines(names(RC_BSE))
paste0(writeLines(names(RC_BSE)), "")
RC_BSE[1]
# Extract the data
RC_BSE = NC_est(years = START_YEAR:END_YEAR, species_codes = CODE_SPECIES_SELECTED, factorize_results = TRUE)[, .(CATCH = sum(CATCH)), keyby = .(YEAR, FLEET_CODE, FLEET, FISHERY_TYPE_CODE, FISHERY_TYPE, FISHERY_GROUP_CODE, FISHERY_GROUP, GEAR_CODE, GEAR, FISHERY_CODE, FISHERY, FISHING_GROUND_CODE, FISHERY_GROUND, SPECIES_CATEGORY, SPECIES_CATEGORY_CODE, SPECIES_CODE, SPECIES, SPECIES_SCIENTIFIC, IS_IOTC_SPECIES, IS_SPECIES_AGGREGATE, IS_SSI, FATE_TYPE_CODE, FATE_TYPE, FATE_CODE, FATE, CATCH_UNIT_CODE)]
# Extract the data
RC_BSE = NC_est(years = START_YEAR:END_YEAR, species_codes = CODE_SPECIES_SELECTED, factorize_results = TRUE)[, .(CATCH = sum(CATCH)), keyby = .(YEAR, FLEET_CODE, FLEET, FISHERY_TYPE_CODE, FISHERY_TYPE, FISHERY_GROUP_CODE, FISHERY_GROUP, GEAR_CODE, GEAR, FISHERY_CODE, FISHERY, FISHING_GROUND_CODE, FISHING_GROUND, SPECIES_CATEGORY, SPECIES_CATEGORY_CODE, SPECIES_CODE, SPECIES, SPECIES_SCIENTIFIC, IS_IOTC_SPECIES, IS_SPECIES_AGGREGATE, IS_SSI, FATE_TYPE_CODE, FATE_TYPE, FATE_CODE, FATE, CATCH_UNIT_CODE)]
RC_BSE[1:2]
RC_BSE[1:2]
# Species of interest
#SPECIES_SELECTED = CL_SPECIES[SPECIES_CODE == CODE_SPECIES_SELECTED, SPECIES]
SPECIES_SELECTED = "Bigeye tuna"
TITLE = paste("IOTC-DATASETS-RC", CODE_SPECIES_SELECTED, START_YEAR, END_YEAR, sep = "-")
# Create empty workbook
BSE_RC_DATA = createWorkbook("BSE_RC_DATA")
## Wide table format
FIELDS_BSE_RC_DATA_TABLE = data.table(read.xlsx("../inputs/FIELDS_BSE_RC_DATA.xlsx", sheet = "RC FORMAT FIELDS", sep.names = " "))[FIELD %in% names(RC_BSE), .(FIELD, DEFINITION, `CODE LIST NAME`, `CODE LIST URL`)]
getwd()
setwd("rmd")
## Wide table format
FIELDS_BSE_RC_DATA_TABLE = data.table(read.xlsx("../inputs/FIELDS_RC_DATA.xlsx", sheet = "RC FORMAT FIELDS", sep.names = " "))[FIELD %in% names(RC_BSE), .(FIELD, DEFINITION, `CODE LIST NAME`, `CODE LIST URL`)]
FIELDS_BSE_RC_DATA_TABLE
FIELDS_BSE_RC_DATA_TABLE[!is.na(`CODE LIST NAME`), `CODE LIST` := paste0("<a href=\"", `CODE LIST URL`, "\">", `CODE LIST NAME`, "</a>")]
FIELDS_BSE_RC_DATA_TABLE = FIELDS_BSE_RC_DATA_TABLE[, -c("CODE LIST NAME", "CODE LIST URL")]
# Add to workbook
addWorksheet(BSE_RC_DATA, "field_description")
writeDataTable(BSE_RC_DATA, sheet = "field_description", x = FIELDS_BSE_RC_DATA_TABLE, rowNames = FALSE, tableStyle = "TableStyleLight11")
setColWidths(BSE_RC_DATA, sheet = "field_description", cols = 1:ncol(FIELDS_BSE_RC_DATA_TABLE), widths = "auto")
# addWorksheet(BSE_RC_DATA, "GEARS")
# writeDataTable(BSE_RC_DATA, sheet = "GEARS", x = CL_GEARS,  tableStyle = "TableStyleLight11")
# setColWidths(BSE_RC_DATA, sheet = "GEARS", cols = 1:nrow(CL_GEARS), widths = "auto")
#
# ## SCHOOL TYPES ####
# addWorksheet(BSE_RC_DATA, "SCHOOL TYPES")
# writeDataTable(BSE_RC_DATA, "SCHOOL TYPES", CL_SCHOOL_TYPES, tableStyle = "TableStyleLight11")
# setColWidths(BSE_RC_DATA, sheet = "SCHOOL TYPES", cols = 1:nrow(CL_SCHOOL_TYPES), widths = "auto")
#
# Save the workbook
saveWorkbook(BSE_RC_DATA, paste0("../outputs/", TITLE, "-DDD.xlsx"), overwrite = TRUE)
setwd("..")
prettyNum(nrow(RC_BSE), big.mark = ",")
prettyNum(nrow(RC_BSE), big.mark = ",")
setwd("initialisation/")
source("90_LIBS.R")
source("91_LIBS_EXTERNAL.R")
#source("01_CL_EXTRACTION_RC.R")
source("08_RC_DATA_EXPORT.R")
setwd("..")
render("./rmd/RC_METADATA.Rmd",
output_format = "html_document2",
output_file = paste0("METADATA_", TITLE, ".html"),
output_dir = "./outputs/html/",
params = list(dynamictitle = paste("METADATA FOR THE RETAINED DATA ")))
setwd("./initialisation/")
TITLE
paste0("../outputs/data/", TITLE, "_dataset.csv")
paste0("../outputs/data/", TITLE, "_Data.csv")
paste0("../outputs/data/", TITLE, ".csv")
# Export the file
write.csv(RC_BSE_DATA, paste0("../outputs/data/", TITLE, ".csv"))
round(file.size(paste0("../outputs/data/", TITLE, ".csv"))/1e3)
paste0("../outputs/data/", TITLE, ".csv")
# Extract the data
RC_BSE = NC_est(years = START_YEAR:END_YEAR, species_codes = CODE_SPECIES_SELECTED, factorize_results = TRUE)[, .(CATCH = sum(CATCH)), keyby = .(YEAR, FLEET_CODE, FLEET, FISHERY_TYPE_CODE, FISHERY_TYPE, FISHERY_GROUP_CODE, FISHERY_GROUP, GEAR_CODE, GEAR, FISHERY_CODE, FISHERY, FISHING_GROUND_CODE, FISHING_GROUND, SPECIES_CATEGORY, SPECIES_CATEGORY_CODE, SPECIES_CODE, SPECIES, SPECIES_SCIENTIFIC, IS_IOTC_SPECIES, IS_SPECIES_AGGREGATE, IS_SSI, FATE_TYPE_CODE, FATE_TYPE, FATE_CODE, FATE, CATCH_UNIT_CODE)]
# Export the file
write.csv(RC_BSE, paste0("../outputs/data/", TITLE, ".csv"))
# File size in KB
RC_BSE_DATA_SIZE = round(file.size(paste0("../outputs/data/", TITLE, ".csv"))/1e3)
RC_BSE_DATA_SIZE
#SPECIES_SELECTED = CL_SPECIES[SPECIES_CODE == CODE_SPECIES_SELECTED, SPECIES]
SPECIES_SELECTED = "Bigeye tuna"
TITLE = paste("IOTC-DATASETS-RC", CODE_SPECIES_SELECTED, START_YEAR, END_YEAR, sep = "-")
# Extract the data
RC_BSE = NC_est(years = START_YEAR:END_YEAR, species_codes = CODE_SPECIES_SELECTED, factorize_results = TRUE)[, .(CATCH = sum(CATCH)), keyby = .(YEAR, FLEET_CODE, FLEET, FISHERY_TYPE_CODE, FISHERY_TYPE, FISHERY_GROUP_CODE, FISHERY_GROUP, GEAR_CODE, GEAR, FISHERY_CODE, FISHERY, FISHING_GROUND_CODE, FISHING_GROUND, SPECIES_CATEGORY, SPECIES_CATEGORY_CODE, SPECIES_CODE, SPECIES, SPECIES_SCIENTIFIC, IS_IOTC_SPECIES, IS_SPECIES_AGGREGATE, IS_SSI, FATE_TYPE_CODE, FATE_TYPE, FATE_CODE, FATE, CATCH_UNIT_CODE)]
# Export the file
write.csv(RC_BSE, paste0("../outputs/data/", TITLE, ".csv"))
# File size in KB
RC_BSE_DATA_SIZE = round(file.size(paste0("../outputs/data/", TITLE, ".csv"))/1e3)
# Create empty workbook
RC_BSE_DATA = createWorkbook("BSE_RC_DATA")
## Wide table format
FIELDS_BSE_RC_DATA_TABLE = data.table(read.xlsx("../inputs/FIELDS_RC_DATA.xlsx", sheet = "RC FORMAT FIELDS", sep.names = " "))[FIELD %in% names(RC_BSE), .(FIELD, DEFINITION, `CODE LIST NAME`, `CODE LIST URL`)]
FIELDS_BSE_RC_DATA_TABLE[!is.na(`CODE LIST NAME`), `CODE LIST` := paste0("<a href=\"", `CODE LIST URL`, "\">", `CODE LIST NAME`, "</a>")]
FIELDS_BSE_RC_DATA_TABLE = FIELDS_BSE_RC_DATA_TABLE[, -c("CODE LIST NAME", "CODE LIST URL")]
# Add to workbook
addWorksheet(BSE_RC_DATA, "field_description")
writeDataTable(BSE_RC_DATA, sheet = "field_description", x = FIELDS_BSE_RC_DATA_TABLE, rowNames = FALSE, tableStyle = "TableStyleLight11")
setColWidths(BSE_RC_DATA, sheet = "field_description", cols = 1:ncol(FIELDS_BSE_RC_DATA_TABLE), widths = "auto")
## Wide table format
FIELDS_RC_BSE_DATA_TABLE = data.table(read.xlsx("../inputs/FIELDS_RC_DATA.xlsx", sheet = "RC FORMAT FIELDS", sep.names = " "))[FIELD %in% names(RC_BSE), .(FIELD, DEFINITION, `CODE LIST NAME`, `CODE LIST URL`)]
FIELDS_RC_BSE_DATA_TABLE[!is.na(`CODE LIST NAME`), `CODE LIST` := paste0("<a href=\"", `CODE LIST URL`, "\">", `CODE LIST NAME`, "</a>")]
FIELDS_RC_BSE_DATA_TABLE = FIELDS_RC_BSE_DATA_TABLE[, -c("CODE LIST NAME", "CODE LIST URL")]
FIELDS_RC_BSE_DATA_TABLE
# Create empty workbook
RC_BSE_DATA = createWorkbook("BSE_RC_DATA")
## Wide table format
FIELDS_RC_BSE_DATA_TABLE = data.table(read.xlsx("../inputs/FIELDS_RC_DATA.xlsx", sheet = "RC FORMAT FIELDS", sep.names = " "))[FIELD %in% names(RC_BSE), .(FIELD, DEFINITION, `CODE LIST NAME`, `CODE LIST URL`)]
FIELDS_RC_BSE_DATA_TABLE[!is.na(`CODE LIST NAME`), `CODE LIST` := paste0("<a href=\"", `CODE LIST URL`, "\">", `CODE LIST NAME`, "</a>")]
FIELDS_RC_BSE_DATA_TABLE = FIELDS_RC_BSE_DATA_TABLE[, -c("CODE LIST NAME", "CODE LIST URL")]
# Add to workbook
addWorksheet(RC_BSE_DATA, "field_description")
writeDataTable(RC_BSE_DATA, sheet = "field_description", x = FIELDS_RC_BSE_DATA_TABLE, rowNames = FALSE, tableStyle = "TableStyleLight11")
setColWidths(RC_BSE_DATA, sheet = "field_description", cols = 1:ncol(FIELDS_RC_BSE_DATA_TABLE), widths = "auto")
# addWorksheet(BSE_RC_DATA, "GEARS")
# writeDataTable(BSE_RC_DATA, sheet = "GEARS", x = CL_GEARS,  tableStyle = "TableStyleLight11")
# setColWidths(BSE_RC_DATA, sheet = "GEARS", cols = 1:nrow(CL_GEARS), widths = "auto")
#
# ## SCHOOL TYPES ####
# addWorksheet(BSE_RC_DATA, "SCHOOL TYPES")
# writeDataTable(BSE_RC_DATA, "SCHOOL TYPES", CL_SCHOOL_TYPES, tableStyle = "TableStyleLight11")
# setColWidths(BSE_RC_DATA, sheet = "SCHOOL TYPES", cols = 1:nrow(CL_SCHOOL_TYPES), widths = "auto")
#
# Save the workbook
saveWorkbook(RC_BSE_DATA, paste0("../outputs/data/", TITLE, "-DDD.xlsx"), overwrite = TRUE)
# Zip the files
zip::zip(zipfile = paste0("../outputs/data/", TITLE, ".zip"), files = c(paste0("../outputs/data/", TITLE, ".csv"), paste0("../outputs/data/", TITLE, ".csv"), paste0("../outputs/data/", TITLE, "-DDD.xlsx")), mode = "cherry-pick", recurse = FALSE)
# Zipped file size in KB
RC_BSE_DATA_ZIP_SIZE = round(file.size(paste0("../outputs/data/", TITLE, ".zip"))/1e3)
# Zip the files
zip::zip(zipfile = paste0("../outputs/data/", TITLE, ".zip"), files = c(paste0("../outputs/data/", TITLE, ".csv"), paste0("../outputs/data/", TITLE, "-DDD.xlsx")), mode = "cherry-pick", recurse = FALSE)
getwD()
getwd()
setwd("..")
render("./rmd/RC_METADATA.Rmd",
output_format = "html_document2",
output_file = paste0("METADATA_", TITLE, ".html"),
output_dir = "./outputs/html/",
params = list(dynamictitle = paste("METADATA FOR THE RETAINED DATA ")))
render("./rmd/RC_METADATA.Rmd",
output_format = "html_document2",
output_file = paste0("METADATA_", TITLE, ".html"),
output_dir = "./outputs/html/",
params = list(dynamictitle = paste("METADATA FOR THE RETAINED DATA ")))
Sys.Date()
#TITLE = paste("IOTC-DATASETS-RC", CODE_SPECIES_SELECTED, START_YEAR, END_YEAR, sep = "-")
TITLE = paste0("IOTC-DATASETS-", Sys.Date(), "-NC-SCI_1950-2024.zip")
TITLE
#TITLE = paste("IOTC-DATASETS-RC", CODE_SPECIES_SELECTED, START_YEAR, END_YEAR, sep = "-")
TITLE = paste0("IOTC-DATASETS-", Sys.Date(), "-NC-BSE_1950-2024.zip")
TITLE
#TITLE = paste("IOTC-DATASETS-RC", CODE_SPECIES_SELECTED, START_YEAR, END_YEAR, sep = "-")
TITLE = paste0("IOTC-DATASETS-", Sys.Date(), "-RC-BSE_1950-2024.zip")
#TITLE = paste("IOTC-DATASETS-RC", CODE_SPECIES_SELECTED, START_YEAR, END_YEAR, sep = "-")
TITLE = paste0("IOTC-DATASETS-", Sys.Date(), "-RC-BSE_1950-2024.zip")
# Extract the data
RC_BSE = NC_est(years = START_YEAR:END_YEAR,  factorize_results = TRUE)[, .(CATCH = sum(CATCH)), keyby = .(YEAR, FLEET_CODE, FLEET, FISHERY_TYPE_CODE, FISHERY_TYPE, FISHERY_GROUP_CODE, FISHERY_GROUP, GEAR_CODE, GEAR, FISHERY_CODE, FISHERY, FISHING_GROUND_CODE, FISHING_GROUND, SPECIES_CATEGORY, SPECIES_CATEGORY_CODE, SPECIES_CODE, SPECIES, SPECIES_SCIENTIFIC, IS_IOTC_SPECIES, IS_SPECIES_AGGREGATE, IS_SSI, FATE_TYPE_CODE, FATE_TYPE, FATE_CODE, FATE, CATCH_UNIT_CODE)]
# Export the file
write.csv(RC_BSE, paste0("../outputs/data/", TITLE, ".csv"))
getwD()
getwd(0)
getwd()
setwd("./initialisation/")
#TITLE = paste("IOTC-DATASETS-RC", CODE_SPECIES_SELECTED, START_YEAR, END_YEAR, sep = "-")
TITLE = paste0("IOTC-DATASETS-", Sys.Date(), "-RC-BSE_1950-2024.zip")
# Extract the data
RC_BSE = NC_est(years = START_YEAR:END_YEAR,  factorize_results = TRUE)[, .(CATCH = sum(CATCH)), keyby = .(YEAR, FLEET_CODE, FLEET, FISHERY_TYPE_CODE, FISHERY_TYPE, FISHERY_GROUP_CODE, FISHERY_GROUP, GEAR_CODE, GEAR, FISHERY_CODE, FISHERY, FISHING_GROUND_CODE, FISHING_GROUND, SPECIES_CATEGORY, SPECIES_CATEGORY_CODE, SPECIES_CODE, SPECIES, SPECIES_SCIENTIFIC, IS_IOTC_SPECIES, IS_SPECIES_AGGREGATE, IS_SSI, FATE_TYPE_CODE, FATE_TYPE, FATE_CODE, FATE, CATCH_UNIT_CODE)]
# Export the file
write.csv(RC_BSE, paste0("../outputs/data/", TITLE, ".csv"))
# File size in KB
RC_BSE_DATA_SIZE = round(file.size(paste0("../outputs/data/", TITLE, ".csv"))/1e3)
RC_BSE_DATA_SIZE
# Create empty workbook
RC_BSE_DATA = createWorkbook("BSE_RC_DATA")
## Wide table format
FIELDS_RC_BSE_DATA_TABLE = data.table(read.xlsx("../inputs/FIELDS_RC_DATA.xlsx", sheet = "RC FORMAT FIELDS", sep.names = " "))[FIELD %in% names(RC_BSE), .(FIELD, DEFINITION, `CODE LIST NAME`, `CODE LIST URL`)]
FIELDS_RC_BSE_DATA_TABLE[!is.na(`CODE LIST NAME`), `CODE LIST` := paste0("<a href=\"", `CODE LIST URL`, "\">", `CODE LIST NAME`, "</a>")]
FIELDS_RC_BSE_DATA_TABLE = FIELDS_RC_BSE_DATA_TABLE[, -c("CODE LIST NAME", "CODE LIST URL")]
# Add to workbook
addWorksheet(RC_BSE_DATA, "field_description")
writeDataTable(RC_BSE_DATA, sheet = "field_description", x = FIELDS_RC_BSE_DATA_TABLE, rowNames = FALSE, tableStyle = "TableStyleLight11")
setColWidths(RC_BSE_DATA, sheet = "field_description", cols = 1:ncol(FIELDS_RC_BSE_DATA_TABLE), widths = "auto")
# addWorksheet(BSE_RC_DATA, "GEARS")
# writeDataTable(BSE_RC_DATA, sheet = "GEARS", x = CL_GEARS,  tableStyle = "TableStyleLight11")
# setColWidths(BSE_RC_DATA, sheet = "GEARS", cols = 1:nrow(CL_GEARS), widths = "auto")
#
# ## SCHOOL TYPES ####
# addWorksheet(BSE_RC_DATA, "SCHOOL TYPES")
# writeDataTable(BSE_RC_DATA, "SCHOOL TYPES", CL_SCHOOL_TYPES, tableStyle = "TableStyleLight11")
# setColWidths(BSE_RC_DATA, sheet = "SCHOOL TYPES", cols = 1:nrow(CL_SCHOOL_TYPES), widths = "auto")
#
# Save the workbook
saveWorkbook(RC_BSE_DATA, paste0("../outputs/data/", TITLE, "-DDD.xlsx"), overwrite = TRUE)
# Zip the files
zip::zip(zipfile = paste0("../outputs/data/", TITLE, ".zip"), files = c(paste0("../outputs/data/", TITLE, ".csv"), paste0("../outputs/data/", TITLE, "-DDD.xlsx")), mode = "cherry-pick", recurse = FALSE)
# Zipped file size in KB
RC_BSE_DATA_ZIP_SIZE = round(file.size(paste0("../outputs/data/", TITLE, ".zip"))/1e3)
TITLE
#TITLE = paste("IOTC-DATASETS-RC", CODE_SPECIES_SELECTED, START_YEAR, END_YEAR, sep = "-")
TITLE = paste0("IOTC-DATASETS-", Sys.Date(), "-RC-BSE_1950-2024")
# Extract the data
RC_BSE = NC_est(years = START_YEAR:END_YEAR,  factorize_results = TRUE)[, .(CATCH = sum(CATCH)), keyby = .(YEAR, FLEET_CODE, FLEET, FISHERY_TYPE_CODE, FISHERY_TYPE, FISHERY_GROUP_CODE, FISHERY_GROUP, GEAR_CODE, GEAR, FISHERY_CODE, FISHERY, FISHING_GROUND_CODE, FISHING_GROUND, SPECIES_CATEGORY, SPECIES_CATEGORY_CODE, SPECIES_CODE, SPECIES, SPECIES_SCIENTIFIC, IS_IOTC_SPECIES, IS_SPECIES_AGGREGATE, IS_SSI, FATE_TYPE_CODE, FATE_TYPE, FATE_CODE, FATE, CATCH_UNIT_CODE)]
# Export the file
write.csv(RC_BSE, paste0("../outputs/data/", TITLE, ".csv"))
# File size in KB
RC_BSE_DATA_SIZE = round(file.size(paste0("../outputs/data/", TITLE, ".csv"))/1e3)
# Create empty workbook
RC_BSE_DATA = createWorkbook("BSE_RC_DATA")
## Wide table format
FIELDS_RC_BSE_DATA_TABLE = data.table(read.xlsx("../inputs/FIELDS_RC_DATA.xlsx", sheet = "RC FORMAT FIELDS", sep.names = " "))[FIELD %in% names(RC_BSE), .(FIELD, DEFINITION, `CODE LIST NAME`, `CODE LIST URL`)]
FIELDS_RC_BSE_DATA_TABLE[!is.na(`CODE LIST NAME`), `CODE LIST` := paste0("<a href=\"", `CODE LIST URL`, "\">", `CODE LIST NAME`, "</a>")]
FIELDS_RC_BSE_DATA_TABLE = FIELDS_RC_BSE_DATA_TABLE[, -c("CODE LIST NAME", "CODE LIST URL")]
# Add to workbook
addWorksheet(RC_BSE_DATA, "field_description")
writeDataTable(RC_BSE_DATA, sheet = "field_description", x = FIELDS_RC_BSE_DATA_TABLE, rowNames = FALSE, tableStyle = "TableStyleLight11")
setColWidths(RC_BSE_DATA, sheet = "field_description", cols = 1:ncol(FIELDS_RC_BSE_DATA_TABLE), widths = "auto")
# addWorksheet(BSE_RC_DATA, "GEARS")
# writeDataTable(BSE_RC_DATA, sheet = "GEARS", x = CL_GEARS,  tableStyle = "TableStyleLight11")
# setColWidths(BSE_RC_DATA, sheet = "GEARS", cols = 1:nrow(CL_GEARS), widths = "auto")
#
# ## SCHOOL TYPES ####
# addWorksheet(BSE_RC_DATA, "SCHOOL TYPES")
# writeDataTable(BSE_RC_DATA, "SCHOOL TYPES", CL_SCHOOL_TYPES, tableStyle = "TableStyleLight11")
# setColWidths(BSE_RC_DATA, sheet = "SCHOOL TYPES", cols = 1:nrow(CL_SCHOOL_TYPES), widths = "auto")
#
# Save the workbook
saveWorkbook(RC_BSE_DATA, paste0("../outputs/data/", TITLE, "-DDD.xlsx"), overwrite = TRUE)
# Zip the files
zip::zip(zipfile = paste0("../outputs/data/", TITLE, ".zip"), files = c(paste0("../outputs/data/", TITLE, ".csv"), paste0("../outputs/data/", TITLE, "-DDD.xlsx")), mode = "cherry-pick", recurse = FALSE)
zip::zip(zipfile = paste0("../outputs/data/", TITLE, ".zip"), files = c(paste0("../outputs/data/", TITLE, ".csv")), mode = "cherry-pick", recurse = FALSE)
# Zipped file size in KB
RC_BSE_DATA_ZIP_SIZE = round(file.size(paste0("../outputs/data/", TITLE, ".zip"))/1e3)
setwd("..")
render("./rmd/RC_METADATA.Rmd",
output_format = "html_document2",
output_file = paste0("METADATA_", TITLE, ".html"),
output_dir = "./outputs/html/",
params = list(dynamictitle = paste("METADATA FOR THE RETAINED DATA ")))
render("./rmd/RC_METADATA.Rmd",
output_format = "html_document2",
output_file = paste0("METADATA_", TITLE, ".html"),
output_dir = "./outputs/html/",
params = list(dynamictitle = paste("Metadata for Retained Catch Data")))
render("./rmd/RC_METADATA.Rmd",
output_format = "html_document2",
output_file = paste0("METADATA_", TITLE, ".html"),
output_dir = "./outputs/html/",
params = list(dynamictitle = paste("Metadata for Retained Catch Data")))
render("./rmd/RC_METADATA.Rmd",
output_format = "html_document2",
output_file = paste0("METADATA_", TITLE, ".html"),
output_dir = "./outputs/html/",
params = list(dynamictitle = paste("Metadata for Retained Catch Data")))
